import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from gtts import gTTS
import os
from googletrans import Translator
import subprocess
import logging

from config import TOKEN

##########################################
#
# –í–ù–ò–ú–ê–ù–ò–ï !!!
#
# –ï—Å–ª–∏ –≤—ã –∫–æ–ø–∏—Ä—É–µ—Ç–µ —Å–µ–±–µ —ç—Ç–æ—Ç –∫–æ–¥, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω FFmpeg
# –¢–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∫–æ–¥ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø–æ–ª–Ω–æ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ
#
# –ï—Å–ª–∏ FFmpeg –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
# –ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç, –¥–ª—è –Ω–µ–≥–æ –Ω—É–∂–µ–Ω FFmpeg
#
###########################################

bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
translator = Translator()

s_text = True  # –§–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –ì–æ–ª–æ—Å/—Ç–µ–∫—Å—Ç

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start(message: Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥.")
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command('help'))
async def cmd_help(message: Message):
    help_text = (
        "üìÑ **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞**:\n"
        "- –ü—Ä–∏—à–ª–∏ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —è –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—é.\n"
        "- –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç ‚Äî —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π.\n"
        "- –ö–æ–º–∞–Ω–¥–∞ /voice ‚Äî –æ—Ç–≤–µ—á–∞—é –≥–æ–ª–æ—Å–æ–º.\n"
        "- –ö–æ–º–∞–Ω–¥–∞ /text ‚Äî –æ—Ç–≤–µ—á–∞—é —Ç–µ–∫—Å—Ç–æ–º.\n"
    )
    await message.answer(help_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(F.photo)
async def ogo(message: Message):
    await message.answer("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
    await bot.download(message.photo[-1], destination=f'img/{message.photo[-1].file_id}.jpg')

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
@dp.message(Command('text'))
async def cmd_text(message: Message, state: FSMContext):
    await state.update_data(mode="text")
    await message.answer("–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω.")

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º
@dp.message(Command('voice'))
async def cmd_voice(message: Message, state: FSMContext):
    await state.update_data(mode="voice")
    await message.answer("–ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω.")

# –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
@dp.message()
async def trans(message: Message, state: FSMContext):
    user_data = await state.get_data()
    mode = user_data.get("mode", "text")
    translated = translator.translate(message.text, dest='en')
    if mode == "text":
        await message.answer(translated.text)
    else:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ FFmpeg
            subprocess.run(['ffmpeg', '-version'], check=True)
        except FileNotFoundError:
            logging.error("FFmpeg –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg.")
            await message.answer("–û—à–∏–±–∫–∞: FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
            return

        try:
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3-—Ñ–∞–π–ª–∞
            tts = gTTS(text=translated.text, lang='en')
            tts.save('trans.mp3')

            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è MP3 –≤ OGG —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FFmpeg
            ogg_filename = 'trans.ogg'
            subprocess.run(
                ['ffmpeg', '-y', '-i', 'trans.mp3', '-acodec', 'libopus', ogg_filename],
                check=True)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ OGG –∫–∞–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            audio_file = FSInputFile(ogg_filename)
            await bot.send_voice(message.chat.id, audio_file)

            # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            os.remove('trans.mp3')
            os.remove(ogg_filename)
        except subprocess.CalledProcessError as e:
            await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ OGG. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É FFmpeg.")
        except Exception as e:
            await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())